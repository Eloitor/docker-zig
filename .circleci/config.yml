version: 2.1

jobs:
  build:
    docker:
      - image: circleci/python:3.8-buster

    working_directory: ~/repo

    environment:
      PIPENV_VENV_IN_PROJECT: true

    steps:
      - checkout
      - setup_remote_docker
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.8/site-packages
      - restore_cache:
          name: restore image tag cache
          keys:
            - last_image_versions-
            - last_image_versions
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          name: restore dependency cache
          key: deps-{{ .Environment.DEPS_CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: install dependencies
          command: |
            sudo pip install pipenv
            pipenv install
      - save_cache:
          name: save dependency cache
          key: deps-{{ .Environment.DEPS_CACHE_VERSION }}-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.8/site-packages"
      - run:
          name: login to docker hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login --username="$DOCKERHUB_USER" --password-stdin
      - run:
          name: build images
          command: |
            pipenv run python build.py --version-path ./last_version --master-path ./last_master
      - save_cache:
          name: save image tag cache
          key: last_image_versions-{{ checksum "last_master" }}
          paths:
            - "./last_version"
            - "./last_master"
workflows:
  version: 2
  commit:
    jobs:
      - build:
          context: dockerhub

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build:
        context: dockerhub
